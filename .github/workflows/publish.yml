name: Cli Publish
on:
  repository_dispatch:
    types: [ releaseCli ]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      cli-branch:
        description: 'Run workflow in cli branch'
        default: main
      home-brew-branch:
        description: 'Run workflow in home brew branch'
        default: main
env:
  FORMULA: twilio

jobs:
#  releseCliCore:
#    runs-on: ubuntu-latest
#    outputs:
#      changeLog: ${{ steps.clicore.outputs.workflow_id }}
#    steps:
#      - uses: convictional/trigger-workflow-and-wait@v1.5.0
#        id: clicore
#        with:
#          owner: LakshmiRavali
#          repo: twilio-cli-core
#          github_token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          workflow_file_name: build.yml
#          ref: test_branch_actions
#          wait_interval: 20
#          propagate_failure: true
#          trigger_workflow: true
#          wait_workflow: true
#      - run: echo ${{steps.clicore.outputs.workflow_id}}
#      - run: echo ${{steps.clicore.outputs.workflow_url}}
#      - run: echo ${{steps.clicore.outputs.workflow_id.updateAPIDefinitions.outputs.changeLog}}
#       - uses: felixp8/dispatch-and-wait@v0.1.0
#         with:
#           owner: LakshmiRavali
#           repo: twilio-cli-core
#           token: ${{ secrets.REPO_ACCESS_TOKEN }}
#           event_type: releaseCliCore
#           wait_time: 20
#           max_time: 120
#   build-chain:
#     runs-on: ubuntu-latest
#     steps:
#       - name: "Run build-chain"
#         id: build-chain
#         uses: kiegroup/github-action-build-chain@v2.5
#         with:
#           definition-file: https://raw.githubusercontent.com/LakshmiRavali/twilio-cli-core/main/.github/workflows/build.yml
#           flow-type: single
#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [10.x]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v2
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: 'npm'
#      - run: npm ci
#      - run: npm test

  #   release:
  #     runs-on: ubuntu-latest
  #     needs: [build]
  #     steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'
  #     - run: npm ci
  #     - run: npx semantic-release
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
   get-tag:
     runs-on: ubuntu-latest
     outputs:
      TAG_NAME: 2.27.1 #${{steps.get-tag.outputs.TAG_NAME}}
      FORMULA: twilio
     steps:
      - uses: actions/checkout@v2
      - name: Getting latest tag
        id: get-tag
        run: |
         git fetch --prune --unshallow
         echo "::set-output name=TAG_NAME::$(git describe --tags $(git rev-list --tags --max-count=1))"
     
   oclif-release:
     name: Publish for ${{ matrix.os }}
     runs-on: ${{ matrix.os }}
     needs: [get-tag]
     outputs:
       sha256: ${{ steps.sha256.outputs.sha256 }}
       formula: ${{ steps.sha256.outputs.formula }}
       version: ${{ steps.sha256.outputs.version }}
     strategy:
       fail-fast: false
       matrix:
         include:
           - os: macos-latest
             asset_name: ${{ needs.get-tag.outputs.FORMULA }}-v${{ needs.get-tag.outputs.TAG_NAME }}
             command_name: sudo oclif-dev pack
             publish: homebrew
           - os: ubuntu-latest
             artifact_name: deb/${{ needs.get-tag.outputs.FORMULA }}_${{ needs.get-tag.outputs.TAG_NAME }}-1_amd64.deb
             asset_name: ${{ needs.get-tag.outputs.FORMULA }}-${{ needs.get-tag.outputs.TAG_NAME }}.deb
             command_name: sudo oclif-dev pack:deb
             publish: github
           - os: macos-latest
             artifact_name: win/${{ needs.get-tag.outputs.FORMULA }}-v${{ needs.get-tag.outputs.TAG_NAME }}-x86.exe
             asset_name: ${{ needs.get-tag.outputs.FORMULA }}-${{ needs.get-tag.outputs.TAG_NAME }}.exe
             command_name: oclif-dev pack:win
             publish: github
           - os: macos-latest
             artifact_name: macos/${{ needs.get-tag.outputs.FORMULA }}-v${{ needs.get-tag.outputs.TAG_NAME }}.pkg
             asset_name: ${{ needs.get-tag.outputs.FORMULA }}-${{ needs.get-tag.outputs.TAG_NAME }}.pkg
             command_name: oclif-dev pack:macos
             publish: github

     steps:
       - uses: actions/checkout@v2
       - run: npm cache clear & npm ci
       - run: npm install -g @oclif/dev-cli
       - run: |
           if [ "$RUNNER_OS" == "macOS" ]; then
             brew install makensis
           fi
       - run: ${{ matrix.command_name }}
       - name: Upload binaries to release
         if: ${{matrix.publish == 'github'}}
         uses: svenstaro/upload-release-action@v2
         with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: dist/${{ matrix.artifact_name }}
           asset_name: ${{ matrix.asset_name }}
           tag: ${{ needs.get-tag.outputs.TAG_NAME }}
       - name: Caliculate sha of oclif dev pack
         id: sha256
         if: ${{matrix.publish == 'homebrew'}}
         run: |
            brew install coreutils
            shaData=sudo sha256sum dist/${{ matrix.asset_name }}/${{ matrix.asset_name }}.tar.gz
            echo "::set-output name=sha256::$shaData"
            echo "::set-output name=formula::${{ needs.get-tag.outputs.FORMULA }}"
            echo ""set-output name=version::${{needs.get-tag.outputs.TAG_NAME}}
   home-brew-release:
     name: Update and trigger homw brew release workflow
     runs-on: ubuntu-latest
     needs: [oclif-release]
     steps:
       - name: Checkout to homebrew
         uses: actions/checkout@v2
         with:
           repository: 'LakshmiRavali/homebrew-brew'
           token: ${{ secrets.REPO_ACCESS_TOKEN }}
       - name: Update Home Brew with latest sha and version
         run: |
           version-pattern='[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*'
           formula-path = Formula/${{needs.oclif-release.outputs.formula}}.rb
           sed -i.bak 's/${{needs.oclif-release.outputs.formula}}-v$version-pattern/${{needs.oclif-release.outputs.formula}}-v${{needs.oclif-release.outputs.version}}/g' $formula-path
           sed -i.bak 's/version .*/version ${{needs.oclif-release.outputs.version}}/' $formula-path
           sed -i.bak 's/sha256 .*/sha256 ${{needs.oclif-release.outputs.sha256}}/' $formula_path
           git config --global user.email "lakshmiravali.rimmalapudi@gmail.com"
           git config --global user.name "lakshmiravali"
           branch=$(git branch --show-current)
           echo "Current branch: $branch"
           git add -A
       - name: Invoke HomeBrew workflow
         uses: benc-uk/workflow-dispatch@v1
         with:
           workflow: HomeBrew Release
           token: ${{ secrets.HOME_BREW_ACCESS_TOKEN }}
           repo: LakshmiRavali/homebrew-brew
           ref: ${{ github.event.inputs.home-brew-branch }}

